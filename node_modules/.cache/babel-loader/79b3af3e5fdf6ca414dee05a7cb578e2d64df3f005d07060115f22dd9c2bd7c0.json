{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\movie-watchlist\\\\src\\\\pages\\\\Movies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Importe o Link\nimport './Movies.css'; // Importe seu arquivo CSS de estilo aqui\nimport MoviesHeader from '../components/MoviesHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const apiKey = '3a0f053f7672852c0960041c106db249'; // Substitua pela sua chave da API TMDB\n\n    // Fazer uma solicitação para obter os filmes mais bem avaliados\n    axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}`).then(response => {\n      const movies = response.data.results.slice(0, 9); // Limitar a 9 filmes iniciais\n      setTopRatedMovies(movies);\n    }).catch(error => {\n      console.error('Erro ao buscar filmes mais bem avaliados:', error);\n    });\n  }, []);\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    // Aqui você pode adicionar a lógica para buscar filmes com base na consulta de pesquisa\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"In\\xEDcio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/filmes\",\n            children: \"Filmes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar filmes...\",\n        value: searchQuery,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: topRatedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w400/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-text\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Rating: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(Movies, \"SVyhsE45BOLn0/sStKThsNGj6JQ=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","MoviesHeader","jsxDEV","_jsxDEV","Movies","_s","topRatedMovies","setTopRatedMovies","searchQuery","setSearchQuery","apiKey","get","then","response","movies","data","results","slice","catch","error","console","handleSearchChange","event","target","value","handleSearchSubmit","preventDefault","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","map","movie","src","poster_path","alt","title","vote_average","id","_c","$RefreshReg$"],"sources":["C:/Projetos/movie-watchlist/src/pages/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; // Importe o Link\r\nimport './Movies.css'; // Importe seu arquivo CSS de estilo aqui\r\nimport MoviesHeader from '../components/MoviesHeader';\r\n\r\nfunction Movies() {\r\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const apiKey = '3a0f053f7672852c0960041c106db249'; // Substitua pela sua chave da API TMDB\r\n\r\n    // Fazer uma solicitação para obter os filmes mais bem avaliados\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}`)\r\n      .then((response) => {\r\n        const movies = response.data.results.slice(0, 9); // Limitar a 9 filmes iniciais\r\n        setTopRatedMovies(movies);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar filmes mais bem avaliados:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Aqui você pode adicionar a lógica para buscar filmes com base na consulta de pesquisa\r\n  };\r\n\r\n    return (\r\n      \r\n      <div className=\"movies-container\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Início</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/filmes\">Filmes</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <h1 className=\"main-title\">Filmes</h1>\r\n        <form onSubmit={handleSearchSubmit} className=\"search-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Buscar filmes...\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n          />\r\n          <button type=\"submit\" className=\"search-button\">\r\n            Buscar\r\n          </button>\r\n      </form>\r\n      <div className=\"movie-list\">\r\n        {topRatedMovies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-card\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\r\n              alt={movie.title}\r\n            />\r\n            <h2 className=\"card-text\">{movie.title}</h2>\r\n            <p className=\"card-text\">Rating: {movie.vote_average}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}