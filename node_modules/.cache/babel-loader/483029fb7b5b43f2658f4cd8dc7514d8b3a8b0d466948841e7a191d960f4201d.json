{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\movie-watchlist\\\\src\\\\pages\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const apiKey = '3a0f053f7672852c0960041c106db249';\n\n    // Primeira solicitação para obter detalhes do filme\n    axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=pt-BR`).then(response => {\n      setMovieDetails(response.data);\n\n      // Segunda solicitação para obter informações de elenco\n      axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`).then(castResponse => {\n        setCast(castResponse.data.cast);\n      }).catch(castError => {\n        console.error('Erro ao buscar informações de elenco:', castError);\n      });\n    }).catch(error => {\n      console.error('Erro ao buscar detalhes do filme:', error);\n    });\n  }, [id]);\n  if (!movieDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Estilo para o texto dos detalhes do filme\n  const textStyle = {\n    textAlign: 'center',\n    color: '#fff' // Cor do texto (branco)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`,\n      alt: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Data de Lan\\xE7amento: \", movieDetails.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Dura\\xE7\\xE3o: \", movieDetails.runtime, \" minutos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Avalia\\xE7\\xE3o: \", movieDetails.vote_average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Sinopse: \", movieDetails.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: textStyle,\n      children: \"Elenco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cast.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: textStyle,\n        children: [actor.name, \" as \", actor.character]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"0p+UWyTkww8GF5nBniN2XLK3w+E=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","MovieDetails","_s","id","movieDetails","setMovieDetails","cast","setCast","apiKey","get","then","response","data","castResponse","catch","castError","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","textStyle","textAlign","color","className","title","src","poster_path","alt","style","release_date","runtime","vote_average","overview","map","actor","name","character","_c","$RefreshReg$"],"sources":["C:/Projetos/movie-watchlist/src/pages/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const apiKey = '3a0f053f7672852c0960041c106db249';\r\n\r\n    // Primeira solicitação para obter detalhes do filme\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=pt-BR`)\r\n      .then((response) => {\r\n        setMovieDetails(response.data);\r\n\r\n        // Segunda solicitação para obter informações de elenco\r\n        axios\r\n          .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\r\n          .then((castResponse) => {\r\n            setCast(castResponse.data.cast);\r\n          })\r\n          .catch((castError) => {\r\n            console.error('Erro ao buscar informações de elenco:', castError);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar detalhes do filme:', error);\r\n      });\r\n  }, [id]);\r\n\r\n  if (!movieDetails) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  // Estilo para o texto dos detalhes do filme\r\n  const textStyle = {\r\n    textAlign: 'center',\r\n    color: '#fff', // Cor do texto (branco)\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-details-container\">\r\n      <h1>{movieDetails.title}</h1>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`}\r\n        alt={movieDetails.title}\r\n      />\r\n      <p style={textStyle}>Data de Lançamento: {movieDetails.release_date}</p>\r\n      <p style={textStyle}>Duração: {movieDetails.runtime} minutos</p>\r\n      <p style={textStyle}>Avaliação: {movieDetails.vote_average}</p>\r\n      <p style={textStyle}>Sinopse: {movieDetails.overview}</p>\r\n\r\n      {/* Exibir informações de elenco */}\r\n      <h2 style={textStyle}>Elenco</h2>\r\n      <ul>\r\n        {cast.map((actor) => (\r\n          <li key={actor.id} style={textStyle}>\r\n            {actor.name} as {actor.character}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}