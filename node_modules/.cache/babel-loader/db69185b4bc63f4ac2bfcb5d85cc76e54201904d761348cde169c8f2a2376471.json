{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\movie-watchlist\\\\src\\\\pages\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [showAllCast, setShowAllCast] = useState(false);\n  useEffect(() => {\n    const apiKey = '3a0f053f7672852c0960041c106db249';\n    axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=pt-BR`).then(response => {\n      setMovieDetails(response.data);\n      axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`).then(castResponse => {\n        setCast(castResponse.data.cast);\n      }).catch(castError => {\n        console.error('Erro ao buscar informações de elenco:', castError);\n      });\n    }).catch(error => {\n      console.error('Erro ao buscar detalhes do filme:', error);\n    });\n  }, [id]);\n  if (!movieDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  const textStyle = {\n    textAlign: 'center',\n    color: '#fff'\n  };\n  const buttonStyle = {\n    backgroundColor: 'transparent',\n    border: '1px solid #fff',\n    color: '#000',\n    padding: '10px 20px',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  const limitedCast = showAllCast ? cast : cast.slice(0, 5);\n\n  // Mapeando nomes dos atores para ícones do Font Awesome\n  const castIcons = {\n    'Nome do Ator 1': 'fa-icon-name-1',\n    'Nome do Ator 2': 'fa-icon-name-2'\n    // Adicione mais nomes e ícones conforme necessário\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`,\n      alt: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Data de Lan\\xE7amento: \", movieDetails.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Dura\\xE7\\xE3o: \", movieDetails.runtime, \" minutos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Avalia\\xE7\\xE3o: \", movieDetails.vote_average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: [\"Sinopse: \", movieDetails.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: textStyle,\n      children: \"Elenco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: limitedCast.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: textStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas ${castIcons[actor.name]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), \" \", actor.name, \" as \", actor.character]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), !showAllCast && cast.length > 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAllCast(true),\n      style: buttonStyle,\n      children: \"Ver Mais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"Bhqc/YUHdSU6ymTq+nLqGRZl+9g=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","MovieDetails","_s","id","movieDetails","setMovieDetails","cast","setCast","showAllCast","setShowAllCast","apiKey","get","then","response","data","castResponse","catch","castError","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","textStyle","textAlign","color","buttonStyle","backgroundColor","border","padding","borderRadius","cursor","limitedCast","slice","castIcons","className","title","src","poster_path","alt","style","release_date","runtime","vote_average","overview","map","actor","name","character","length","onClick","_c","$RefreshReg$"],"sources":["C:/Projetos/movie-watchlist/src/pages/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n  const [showAllCast, setShowAllCast] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const apiKey = '3a0f053f7672852c0960041c106db249';\r\n\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=pt-BR`)\r\n      .then((response) => {\r\n        setMovieDetails(response.data);\r\n\r\n        axios\r\n          .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\r\n          .then((castResponse) => {\r\n            setCast(castResponse.data.cast);\r\n          })\r\n          .catch((castError) => {\r\n            console.error('Erro ao buscar informações de elenco:', castError);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar detalhes do filme:', error);\r\n      });\r\n  }, [id]);\r\n\r\n  if (!movieDetails) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  const textStyle = {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: 'transparent',\r\n    border: '1px solid #fff',\r\n    color: '#000',\r\n    padding: '10px 20px',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n  };\r\n\r\n  const limitedCast = showAllCast ? cast : cast.slice(0, 5);\r\n\r\n  // Mapeando nomes dos atores para ícones do Font Awesome\r\n  const castIcons = {\r\n    'Nome do Ator 1': 'fa-icon-name-1',\r\n    'Nome do Ator 2': 'fa-icon-name-2',\r\n    // Adicione mais nomes e ícones conforme necessário\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-details-container\">\r\n      <h1>{movieDetails.title}</h1>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`}\r\n        alt={movieDetails.title}\r\n      />\r\n      <p style={textStyle}>Data de Lançamento: {movieDetails.release_date}</p>\r\n      <p style={textStyle}>Duração: {movieDetails.runtime} minutos</p>\r\n      <p style={textStyle}>Avaliação: {movieDetails.vote_average}</p>\r\n      <p style={textStyle}>Sinopse: {movieDetails.overview}</p>\r\n\r\n      <h2 style={textStyle}>Elenco</h2>\r\n      <ul>\r\n        {limitedCast.map((actor) => (\r\n          <li key={actor.id} style={textStyle}>\r\n            {/* Usando ícones do Font Awesome para cada ator */}\r\n            <i className={`fas ${castIcons[actor.name]}`}></i> {actor.name} as {actor.character}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {!showAllCast && cast.length > 5 && (\r\n        <button onClick={() => setShowAllCast(true)} style={buttonStyle}>\r\n          Ver Mais\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}